[{"C:\\Portfolio\\test-project_2\\src\\index.js":"1","C:\\Portfolio\\test-project_2\\src\\reportWebVitals.js":"2","C:\\Portfolio\\test-project_2\\src\\App.js":"3","C:\\Portfolio\\test-project_2\\src\\components\\animations\\Spinner.js":"4","C:\\Portfolio\\test-project_2\\src\\components\\MainTitle.js":"5","C:\\Portfolio\\test-project_2\\src\\components\\TableView.js":"6","C:\\Portfolio\\test-project_2\\src\\stores\\TableViewStore.js":"7","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SearchInput.js":"8","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectInput.js":"9","C:\\Portfolio\\test-project_2\\src\\stores\\RootStore.js":"10","C:\\Portfolio\\test-project_2\\src\\pages\\AddBook.js":"11","C:\\Portfolio\\test-project_2\\src\\pages\\Home.js":"12","C:\\Portfolio\\test-project_2\\src\\pages\\EditBook.js":"13","C:\\Portfolio\\test-project_2\\src\\stores\\NewBookViewStore.js":"14","C:\\Portfolio\\test-project_2\\src\\components\\NewBookView.js":"15","C:\\Portfolio\\test-project_2\\src\\pages\\BookDetails.js":"16","C:\\Portfolio\\test-project_2\\src\\stores\\BookDetailsViewStore.js":"17","C:\\Portfolio\\test-project_2\\src\\components\\BookDetailsView.js":"18","C:\\Portfolio\\test-project_2\\src\\components\\services\\BookService.js":"19","C:\\Portfolio\\test-project_2\\src\\components\\AddBookForm.js":"20","C:\\Portfolio\\test-project_2\\src\\components\\Table.js":"21","C:\\Portfolio\\test-project_2\\src\\components\\TableFilters.js":"22","C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewBookForm.js":"23","C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookDescriptionForm.js":"24","C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookReviewForm.js":"25","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\Card.js":"26","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextFormInput.js":"27","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectFormInput.js":"28","C:\\Portfolio\\test-project_2\\src\\components\\Pagination.js":"29","C:\\Portfolio\\test-project_2\\src\\components\\AddBookDescriptionForm.js":"30","C:\\Portfolio\\test-project_2\\src\\components\\AddBookReviewForm.js":"31","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextAreaFormInput.js":"32","C:\\Portfolio\\test-project_2\\src\\pages\\Libraries.js":"33","C:\\Portfolio\\test-project_2\\src\\pages\\AddLibrary.js":"34","C:\\Portfolio\\test-project_2\\src\\components\\AddLibraryForm.js":"35","C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewLibraryForm.js":"36","C:\\Portfolio\\test-project_2\\src\\components\\NewLibraryView.js":"37","C:\\Portfolio\\test-project_2\\src\\components\\LibraryView.js":"38","C:\\Portfolio\\test-project_2\\src\\stores\\NewLibraryViewStore.js":"39","C:\\Portfolio\\test-project_2\\src\\components\\services\\LibraryService.js":"40","C:\\Portfolio\\test-project_2\\src\\stores\\LibraryViewStore.js":"41","C:\\Portfolio\\test-project_2\\src\\components\\ui\\LibraryBox.js":"42","C:\\Portfolio\\test-project_2\\src\\stores\\LibraryDetailsViewStore.js":"43","C:\\Portfolio\\test-project_2\\src\\pages\\LibraryDetails.js":"44","C:\\Portfolio\\test-project_2\\src\\components\\LibraryDetailsView.js":"45","C:\\Portfolio\\test-project_2\\src\\components\\ui\\ListItem.js":"46","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\CheckboxInput.js":"47"},{"size":819,"mtime":1607662076483,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":1107,"mtime":1608610056596,"results":"51","hashOfConfig":"49"},{"size":938,"mtime":1607282709365,"results":"52","hashOfConfig":"49"},{"size":551,"mtime":1608599885508,"results":"53","hashOfConfig":"49"},{"size":690,"mtime":1608608277736,"results":"54","hashOfConfig":"49"},{"size":5644,"mtime":1608599885517,"results":"55","hashOfConfig":"49"},{"size":453,"mtime":1607662076482,"results":"56","hashOfConfig":"49"},{"size":1505,"mtime":1607662076482,"results":"57","hashOfConfig":"49"},{"size":840,"mtime":1608609592037,"results":"58","hashOfConfig":"49"},{"size":451,"mtime":1608599885515,"results":"59","hashOfConfig":"49"},{"size":546,"mtime":1608600505657,"results":"60","hashOfConfig":"49"},{"size":511,"mtime":1607662076483,"results":"61","hashOfConfig":"49"},{"size":3850,"mtime":1608599885516,"results":"62","hashOfConfig":"49"},{"size":1211,"mtime":1608599885508,"results":"63","hashOfConfig":"49"},{"size":378,"mtime":1608599885515,"results":"64","hashOfConfig":"49"},{"size":591,"mtime":1608599885515,"results":"65","hashOfConfig":"49"},{"size":3284,"mtime":1608599885508,"results":"66","hashOfConfig":"49"},{"size":2381,"mtime":1608599885514,"results":"67","hashOfConfig":"49"},{"size":1154,"mtime":1608599885507,"results":"68","hashOfConfig":"49"},{"size":2576,"mtime":1608615546920,"results":"69","hashOfConfig":"49"},{"size":916,"mtime":1608599885509,"results":"70","hashOfConfig":"49"},{"size":2694,"mtime":1608599885512,"results":"71","hashOfConfig":"49"},{"size":1249,"mtime":1608599885511,"results":"72","hashOfConfig":"49"},{"size":1076,"mtime":1608599885512,"results":"73","hashOfConfig":"49"},{"size":3749,"mtime":1608613365582,"results":"74","hashOfConfig":"49"},{"size":409,"mtime":1608599885514,"results":"75","hashOfConfig":"49"},{"size":537,"mtime":1608599885513,"results":"76","hashOfConfig":"49"},{"size":2136,"mtime":1608599885509,"results":"77","hashOfConfig":"49"},{"size":683,"mtime":1608599885507,"results":"78","hashOfConfig":"49"},{"size":692,"mtime":1608599885507,"results":"79","hashOfConfig":"49"},{"size":384,"mtime":1608599885513,"results":"80","hashOfConfig":"49"},{"size":504,"mtime":1608606332960,"results":"81","hashOfConfig":"49"},{"size":425,"mtime":1608604683987,"results":"82","hashOfConfig":"49"},{"size":1071,"mtime":1608604876519,"results":"83","hashOfConfig":"49"},{"size":1616,"mtime":1608623391334,"results":"84","hashOfConfig":"49"},{"size":1065,"mtime":1608604704717,"results":"85","hashOfConfig":"49"},{"size":1098,"mtime":1608609947708,"results":"86","hashOfConfig":"49"},{"size":1866,"mtime":1608623391326,"results":"87","hashOfConfig":"49"},{"size":2792,"mtime":1608623391329,"results":"88","hashOfConfig":"49"},{"size":4013,"mtime":1608623391331,"results":"89","hashOfConfig":"49"},{"size":550,"mtime":1608610067806,"results":"90","hashOfConfig":"49"},{"size":312,"mtime":1608609592035,"results":"91","hashOfConfig":"49"},{"size":341,"mtime":1608609693523,"results":"92","hashOfConfig":"49"},{"size":2480,"mtime":1608623391333,"results":"93","hashOfConfig":"49"},{"size":482,"mtime":1608621864797,"results":"94","hashOfConfig":"49"},{"size":443,"mtime":1608615922254,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"19jjmdu",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Portfolio\\test-project_2\\src\\index.js",[],["202","203"],"C:\\Portfolio\\test-project_2\\src\\reportWebVitals.js",[],"C:\\Portfolio\\test-project_2\\src\\App.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\animations\\Spinner.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\MainTitle.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\TableView.js",["204"],"import React, {useEffect} from 'react'\r\nimport {Observer} from 'mobx-react'\r\nimport Spinner from \"./animations/Spinner\";\r\nimport Table from \"./Table\";\r\nimport TableFilters from \"./TableFilters\";\r\n\r\nconst TableView = ({data}) => {\r\n    const store = data;\r\n\r\n    useEffect(() => {\r\n           store.getData();\r\n        }, []);\r\n\r\n         return(\r\n             <Observer>{()=>\r\n                 <div className=\"container\">\r\n                     <TableFilters store={store}/>\r\n                     {store.loading === true ? <Spinner/> : null}\r\n                     <Table store = {store}/>\r\n                 </div>\r\n             }\r\n             </Observer>\r\n )\r\n};\r\nexport default TableView\r\n","C:\\Portfolio\\test-project_2\\src\\stores\\TableViewStore.js",["205","206","207"],"import {action, autorun, computed, observable, runInAction, set} from \"mobx\";\r\nimport {BookService} from \"../components/services/BookService\";\r\n\r\n\r\nexport class TableViewStore {\r\n    @observable books =[];\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.api = new BookService();\r\n\r\n    }\r\n   @observable   statusArray =['All','Completed', 'To-Read'];\r\n    @observable  sortArray = ['Unsorted','Ascending','Descending'];\r\n    @observable  apiData = [];\r\n    @observable  status = 'All';\r\n    @observable  search = '';\r\n    @observable  sort = '';\r\n    @observable  filteredList = [];\r\n    @observable  sorted = 'Unsorted';\r\n    @observable  itemsPerPage = 5;\r\n    @observable  lastPage = '';\r\n    @observable  error = '';\r\n    @observable  page = 1;\r\n    @observable  limit = 30;\r\n    @observable  loading = true;\r\n\r\n\r\n  @action  getData = async () => {\r\n        this.loading = true;\r\n           try {\r\n               if (this.status==='All' && this.sorted === 'Unsorted'){\r\n                   const data = await this.api.get();\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   runInAction(() => {\r\n                       this.apiData = toArray;\r\n                   });\r\n               }  if (this.status === 'Completed' || this.status ==='To-Read') {\r\n                   const data = await this.api.find(`?&orderBy=\"status\"&equalTo=\"${this.status}\"`);\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   runInAction(() => {\r\n                       this.apiData = toArray;\r\n                   });\r\n               } else if(this.sorted !== 'Unsorted' && this.status==='All'){\r\n                   const data = await this.api.find(`?&orderBy=\"author\"`);\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   const desc = toArray.slice().sort((a, b) => a.author.localeCompare(b.author));\r\n                   const asc =  toArray.slice().sort((a, b) => b.author.localeCompare(a.author));\r\n                   if (this.sorted === 'Ascending'){\r\n                       runInAction(() => {\r\n                           this.apiData = asc;\r\n                       });\r\n                   }else  this.apiData = desc\r\n               }\r\n            } catch (error) {\r\n                runInAction(() => {\r\n                    this.error = \"error\";\r\n                })\r\n            }finally {\r\n               runInAction(() => {\r\n                   this.paginate();\r\n                   this.loading = false\r\n               });\r\n           }\r\n        };\r\n\r\n\r\n   @action deleteBook = async (id) => {\r\n        try {\r\n            this.loading = true;\r\n            const getNode = await this.api.find(`?&orderBy=\"id\"&equalTo=\"${id}\"`);\r\n            const forUrl  =Object.keys(getNode)[0];\r\n            const response = await this.api.delete(forUrl);\r\n            if (response.status === 204) {\r\n                runInAction(() => {\r\n                    this.loading = false\r\n                })\r\n            }\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.error=\"error\";\r\n            })\r\n        }finally {\r\n            this.getData()\r\n        }\r\n    };\r\n\r\n  @action async filter (){\r\n       try{\r\n              await runInAction(() => {\r\n                   this.sorted ='Unsorted';\r\n                   // this.filteredList = this.apiData.filter(el => el.status === this.status)\r\n                   console.log(this.filteredList)\r\n               })\r\n       }catch (e) {\r\n           this.error = 'error'\r\n       }\r\n\r\n    }\r\n\r\n  @action  handleFilterStatus = (e) => {\r\n        this.status = e.target.value;\r\n        this.filter()\r\n        this.getData()\r\n        // this.filter()\r\n    };\r\n  @action async doSort () {\r\n      this.loading = true;\r\n      try {\r\n          if (this.sorted === 'Unsorted') {\r\n              this.resetFilters();\r\n              runInAction(() => {\r\n                  this.loading = false\r\n              })\r\n          }\r\n          if (this.sorted === 'Ascending') {\r\n              runInAction(() => {\r\n                  // this.filteredList = this.apiData.slice().sort((a, b) => b.author.localeCompare(a.author))\r\n                  this.status = 'All'\r\n                  this.loading = false\r\n              })\r\n          }\r\n          if (this.sorted === 'Descending') {\r\n              runInAction(() => {\r\n                  // this.filteredList = this.apiData.slice().sort((a, b) => a.author.localeCompare(b.author))\r\n                  this.status = 'All';\r\n                  this.loading = false\r\n              })\r\n          }\r\n       }catch (e) {\r\n           this.error= 'error'\r\n       }\r\n   }\r\n  @action  handleSort= (e) =>{\r\n        this.sorted = e.target.value;\r\n        this.doSort()\r\n        this.getData();\r\n\r\n    };\r\n  @action  paginate(){\r\n         runInAction(() => {\r\n              const indexLastBook = this.page*this.itemsPerPage;\r\n              const indexFirstBook = indexLastBook - this.itemsPerPage;\r\n              this.filteredList = this.apiData.slice( indexFirstBook,indexLastBook);\r\n          })\r\n      }\r\n\r\n\r\n   @action handlePagination = value =>{\r\n           this.page = value;\r\n           this.getData()\r\n\r\n    };\r\n   @action resetFilters = () =>{\r\n        this.getData();\r\n        this.status = 'All';\r\n        this.sorted = 'Unsorted'\r\n    };\r\n   // @computed\r\n   // get paginated(){\r\n   //         const indexLastBook = this.page*this.itemsPerPage;\r\n   //         const indexFirstBook = indexLastBook - this.itemsPerPage;\r\n   //         return  this.apiData.slice( indexFirstBook,indexLastBook);\r\n   //     }\r\n   }\r\n\r\n\r\n\r\n","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SearchInput.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectInput.js",[],"C:\\Portfolio\\test-project_2\\src\\stores\\RootStore.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\AddBook.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\Home.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\EditBook.js",[],"C:\\Portfolio\\test-project_2\\src\\stores\\NewBookViewStore.js",["208"],"import {action, observable, runInAction} from \"mobx\";\r\nimport {BookService} from \"../components/services/BookService\";\r\nimport uuid from 'react-uuid'\r\n\r\n\r\nexport class NewBookViewStore {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.api = new BookService();\r\n    }\r\n\r\n    @observable model = {\r\n        id: '',\r\n        author: '',\r\n        title: '',\r\n        status: '',\r\n        cover:'',\r\n        pages: '',\r\n        review : '',\r\n        description : '',\r\n        url:''\r\n    };\r\n    @observable currentBook = null;\r\n    @observable status = '';\r\n    @observable selectStatusArray = ['Completed', 'To-Read'];\r\n    @observable isLoading = true;\r\n    @observable description = '';\r\n    @observable review = '';\r\n\r\n    @action handleBookSubmit = async (form) => {\r\n        this.isLoading = true;\r\n        try {\r\n           runInAction(() => {\r\n                this.model = form.values()\r\n            });\r\n          await runInAction(() => {\r\n                this.model.id = uuid()\r\n            });\r\n            await this.api.post(this.model);\r\n                runInAction(() => {\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                    alert('Successfully added a book!')\r\n                })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            });\r\n        }\r\n    };\r\n    @action getBook = async (id) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const getNode = await this.api.find(`?&orderBy=\"id\"&equalTo=\"${id}\"`);\r\n            const uid = Object.keys(getNode);\r\n            const toArray = Object.values(getNode);\r\n            runInAction(() => {\r\n                    this.model.author = toArray[0].author;\r\n                    this.model.status = toArray[0].status;\r\n                    this.model.title = toArray[0].title;\r\n                    this.model.id = toArray[0].id;\r\n                    this.model.cover = toArray[0].cover;\r\n                    this.model.pages = toArray[0].pages;\r\n                    this.model.description = toArray[0].description;\r\n                    this.model.review = toArray[0].review;\r\n                    this.model.url = toArray[0].url;\r\n                    this.currentBook = uid[0];\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            })\r\n        }\r\n    };\r\n    @action  resetData = async () =>{\r\n        try {\r\n            this.isLoading = true;\r\n            await runInAction(() => {\r\n                    this.model.author = '';\r\n                    this.model.status = '';\r\n                    this.model.title = '';\r\n                    this.model.id = '';\r\n                    this.model.cover ='';\r\n                    this.model.pages = '';\r\n                    this.model.url = '';\r\n                    this.model.description = '';\r\n                    this.model.review = '';\r\n                })\r\n        }catch (e) {\r\n        }\r\n    }\r\n    @action editBook = async (form) => {\r\n        const node = form.values().node;\r\n        const id = form.values().id;\r\n        try {\r\n           runInAction(() => {\r\n                this.model = form.values();\r\n            });\r\n            const response = await this.api.patch(this.model,node);\r\n            if (response.status === 200) {\r\n                runInAction(() => {\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                    alert('Success')\r\n                })\r\n            }\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            })\r\n        }finally {\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","C:\\Portfolio\\test-project_2\\src\\components\\NewBookView.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\BookDetails.js",["209"],"import React from \"react\";\r\nimport {MainTitle} from \"../components/MainTitle\";\r\nimport {useParams} from 'react-router-dom'\r\nimport BookDetailsView from \"../components/BookDetailsView\";\r\n\r\n\r\nfunction  BookDetails(){\r\n    let { id } = useParams();\r\n    return (\r\n        <div>\r\n            <BookDetailsView id = {id}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default BookDetails;\r\n","C:\\Portfolio\\test-project_2\\src\\stores\\BookDetailsViewStore.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\BookDetailsView.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\services\\BookService.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\AddBookForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\Table.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\TableFilters.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewBookForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookDescriptionForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookReviewForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\Card.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextFormInput.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectFormInput.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\Pagination.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\AddBookDescriptionForm.js",["210"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport TextAreaFormInput from \"./inputs/TextAreaFormInput\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default observer(({ form,id }) => (\r\n    <form onSubmit={form.onSubmit}>\r\n        <TextAreaFormInput field={form.$('description')}/>\r\n        <div className=\"row-buttons\">\r\n            {id=== undefined ?<button className=\"green-button\"  onClick={form.onSubmit}>Submit</button>:<button type=\"submit\"onClick={form.onSubmit}>Edit</button>}\r\n            <button type=\"button\"   className=\"green-button\" onClick={form.onClear}>Clear</button>\r\n        </div>\r\n        <p>{form.error}</p>\r\n    </form>\r\n));\r\n","C:\\Portfolio\\test-project_2\\src\\components\\AddBookReviewForm.js",["211"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport TextAreaFormInput from \"./inputs/TextAreaFormInput\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default observer(({ form, id}) => (\r\n    <form onSubmit={form.onSubmit}>\r\n        <TextAreaFormInput field={form.$('review')}/>\r\n        <div className=\"row-buttons\">\r\n            {id=== undefined ?<button type=\"submit\"  className=\"green-button\" onClick={form.onSubmit}>Submit</button>:<button type=\"submit\" onClick={form.onSubmit}>Edit</button>}\r\n            <button type=\"button\" className=\"green-button\"  onClick={form.onClear}>Clear</button>\r\n        </div>\r\n        <p>{form.error}</p>\r\n    </form>\r\n));\r\n","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextAreaFormInput.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\Libraries.js",["212"],"import React from \"react\";\r\nimport NewBookView from \"../components/NewBookView\";\r\nimport {MainTitle} from \"../components/MainTitle\";\r\nimport LibraryView from \"../components/LibraryView\";\r\n\r\n\r\n\r\nfunction  Libraries(){\r\n    return (\r\n        <div>\r\n                <MainTitle title={'Your libraries'}/>\r\n                <LibraryView/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Libraries;\r\n","C:\\Portfolio\\test-project_2\\src\\pages\\AddLibrary.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\AddLibraryForm.js",["213"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport SimpleInput from './inputs/TextFormInput';\r\nimport SelectFormInput from \"./inputs/SelectFormInput\";\r\nimport {Link} from \"react-router-dom\";\r\nimport TextAreaFormInput from \"./inputs/TextAreaFormInput\";\r\n\r\n\r\n\r\nexport default observer(({ form,id,goBack }) => (\r\n    <form onSubmit={form.onSubmit}>\r\n        <SimpleInput field={form.$('library')} />\r\n        <SimpleInput field={form.$('genre')} />\r\n        <TextAreaFormInput  field={form.$('description')} />\r\n\r\n        <br />\r\n        <div className=\"row-buttons\">\r\n            {id=== undefined ?<button type=\"submit\" className=\"green-button\"  onClick={form.onSubmit}>Submit</button>:<button type=\"submit\" onClick={form.onSubmit}>Edit</button>}\r\n            {goBack === true ? <button type=\"button\" className=\"green-button\"  onClick={form.onClear}> <Link to={'/'}>Return</Link></button> : <button type=\"button\" className=\"green-button\"  onClick={form.onClear}>Clear</button> }\r\n        </div>\r\n\r\n        <p>{form.error}</p>\r\n    </form>\r\n));\r\n\r\n\r\n","C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewLibraryForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\NewLibraryView.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\LibraryView.js",["214","215"],"C:\\Portfolio\\test-project_2\\src\\stores\\NewLibraryViewStore.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\services\\LibraryService.js",["216"],"const apiUrl = \"https://test-project-ea9e5-default-rtdb.europe-west1.firebasedatabase.app/libraries\";\r\nconst apiKey = process.env.REACT_APP_LIBRARY_API_KEY;\r\n\r\nexport class LibraryService {\r\n\r\n    get = async () => {\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': apiKey,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n        };\r\n\r\n        const request = new Request(apiUrl + '.json', options);\r\n        const response = await fetch(request);\r\n        return await response.json();\r\n    };\r\n\r\n    find = async (urlParams) => {\r\n        let options = {\r\n            method: \"GET\",\r\n            headers : {\r\n                'Authorization':apiKey,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n        };\r\n\r\n        const request = new Request(apiUrl + '.json' + urlParams , options);\r\n        const response = await fetch(request);\r\n        return await response.json()\r\n\r\n    };\r\n    post = async (model) => {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        let options = {\r\n            method: \"POST\",\r\n            'Access-Control-Allow-Origin': '*',\r\n            headers,\r\n            body: JSON.stringify(model)\r\n        };\r\n        const request = new Request(apiUrl + '.json', options);\r\n        const response = await fetch(request);\r\n        return response;\r\n    };\r\n    postBook= async (model, urlParams ) => {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        let options = {\r\n            method: \"POST\",\r\n            headers,\r\n            body: JSON.stringify(model)\r\n        };\r\n        const request = new Request(apiUrl+'/'+ urlParams +'/books'+ '.json', options);\r\n        const response = await fetch(request);\r\n        return response;\r\n    };\r\n    patch = async (model, urlParams ) => {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        let options = {\r\n            method: \"PATCH\",\r\n            headers,\r\n            body: JSON.stringify(model)\r\n        };\r\n        const request = new Request(apiUrl+'/'+ urlParams + '.json', options);\r\n        const response = await fetch(request);\r\n        return response;\r\n    };\r\n    delete = async (id) => {\r\n        const options = {\r\n            method: \"DELETE\",\r\n            headers : {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization':apiKey,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n        };\r\n        const request = new Request(apiUrl + \"/\" + id +'.json', options);\r\n        const response = await fetch(request);\r\n        return await response.json()\r\n    }\r\n\r\n}\r\n","C:\\Portfolio\\test-project_2\\src\\stores\\LibraryViewStore.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\ui\\LibraryBox.js",["217"],"C:\\Portfolio\\test-project_2\\src\\stores\\LibraryDetailsViewStore.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\LibraryDetails.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\LibraryDetailsView.js",["218","219","220","221","222"],"import React from 'react'\r\nimport Card from \"./inputs/Card\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport BookDescriptionForm from \"./forms/BookDescriptionForm\";\r\nimport NewBookForm from \"./forms/NewBookForm\";\r\nimport BookReviewForm from \"./forms/BookReviewForm\";\r\nimport {MainTitle} from \"./MainTitle\";\r\nimport AddLibraryForm from \"./AddLibraryForm\";\r\nimport NewLibraryForm from \"./forms/NewLibraryForm\";\r\nimport ListItem from \"./ui/ListItem\";\r\nimport Table from \"./Table\";\r\n\r\n@inject('rootStore')\r\n@observer\r\nclass LibraryDetailsView extends React.Component {\r\n    store = this.props.rootStore.libraryStore;\r\n    ui = this.props.rootStore.libraryDetailsStore;\r\n    id = this.props.id;\r\n     componentDidMount() {\r\n        if (this.id !==undefined){\r\n            this.store.getLibrary(this.id) &&this.store.getBooks();\r\n\r\n            // this.store.getBooks()\r\n            console.log(this.id)\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        this.store.getLibrary(this.id)\r\n             // this.store.getBooks()\r\n    }\r\n    render() {\r\n        const detailsLibraryForm = new NewLibraryForm( {\r\n            values: {\r\n                library: this.store.model.library,\r\n                description:this.store.model.description,\r\n                genre: this.store.model.genre,\r\n                node : this.store.currentLibrary,\r\n                id : this.store.model.id\r\n            }\r\n        });\r\n        return(\r\n            <div>\r\n                <MainTitle withLink={true} title={this.store.model.library}/>\r\n                <div className=\"grid-oontainer\">\r\n                    <Card\r\n                        title={\"Library Details\"}\r\n                        library\r\n                        opener={this.ui.openLibraryDescriptionForm}\r\n                        position={1}\r\n                        detLibraryForm={detailsLibraryForm}\r\n                        store={this.store}\r\n                        openState = {this.ui.detLibraryOpen}\r\n                    />\r\n                    <div className=\"item-2\">\r\n                            {this.store.bookData.map((b,i)=>(\r\n                                <div key={i}>\r\n                                    <ListItem author={b.author} title={b.title} handler={()=>this.store.addBookToLibrary(b)}/>\r\n                                </div>\r\n                                ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default LibraryDetailsView\r\n","C:\\Portfolio\\test-project_2\\src\\components\\ui\\ListItem.js",["223"],"import React from  'react'\r\nimport CheckboxInput from \"../inputs/CheckboxInput\";\r\n\r\nconst ListItem = ({author,title,handler})=> {\r\n    return(\r\n        <div className=\"list-item\">\r\n            <div>\r\n                <p>Author:  {author}</p>\r\n                <p>Title:  {title}</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"green-button margin-0\" onClick={handler}>Addy</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ListItem\r\n","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\CheckboxInput.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":12,"column":12,"nodeType":"230","endLine":12,"endColumn":14,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":24},{"ruleId":"232","severity":1,"message":"236","line":1,"column":26,"nodeType":"234","messageId":"235","endLine":1,"endColumn":34},{"ruleId":"232","severity":1,"message":"237","line":1,"column":61,"nodeType":"234","messageId":"235","endLine":1,"endColumn":64},{"ruleId":"232","severity":1,"message":"238","line":96,"column":15,"nodeType":"234","messageId":"235","endLine":96,"endColumn":17},{"ruleId":"232","severity":1,"message":"239","line":2,"column":9,"nodeType":"234","messageId":"235","endLine":2,"endColumn":18},{"ruleId":"232","severity":1,"message":"240","line":4,"column":9,"nodeType":"234","messageId":"235","endLine":4,"endColumn":13},{"ruleId":"232","severity":1,"message":"240","line":4,"column":9,"nodeType":"234","messageId":"235","endLine":4,"endColumn":13},{"ruleId":"232","severity":1,"message":"241","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":19},{"ruleId":"232","severity":1,"message":"242","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":23},{"ruleId":"232","severity":1,"message":"243","line":2,"column":19,"nodeType":"234","messageId":"235","endLine":2,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":13,"column":4,"nodeType":"230","endLine":13,"endColumn":6,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":55,"column":68,"nodeType":"247","messageId":"248","endLine":55,"endColumn":69},{"ruleId":"232","severity":1,"message":"249","line":1,"column":16,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"250","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":27},{"ruleId":"232","severity":1,"message":"251","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":19},{"ruleId":"232","severity":1,"message":"252","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":22},{"ruleId":"232","severity":1,"message":"253","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":22},{"ruleId":"232","severity":1,"message":"254","line":11,"column":8,"nodeType":"234","messageId":"235","endLine":11,"endColumn":13},{"ruleId":"232","severity":1,"message":"255","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":21},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["258"],"no-unused-vars","'autorun' is defined but never used.","Identifier","unusedVar","'computed' is defined but never used.","'set' is defined but never used.","'id' is assigned a value but never used.","'MainTitle' is defined but never used.","'Link' is defined but never used.","'NewBookView' is defined but never used.","'SelectFormInput' is defined but never used.","'observer' is defined but never used.",["259"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'BookDescriptionForm' is defined but never used.","'NewBookForm' is defined but never used.","'BookReviewForm' is defined but never used.","'AddLibraryForm' is defined but never used.","'Table' is defined but never used.","'CheckboxInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},"Update the dependencies array to be: [store]",{"range":"263","text":"264"},{"range":"265","text":"264"},[321,323],"[store]",[284,286]]