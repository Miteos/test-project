[{"C:\\Portfolio\\test-project_2\\src\\index.js":"1","C:\\Portfolio\\test-project_2\\src\\reportWebVitals.js":"2","C:\\Portfolio\\test-project_2\\src\\App.js":"3","C:\\Portfolio\\test-project_2\\src\\components\\animations\\Spinner.js":"4","C:\\Portfolio\\test-project_2\\src\\components\\MainTitle.js":"5","C:\\Portfolio\\test-project_2\\src\\components\\TableView.js":"6","C:\\Portfolio\\test-project_2\\src\\stores\\TableViewStore.js":"7","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SearchInput.js":"8","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectInput.js":"9","C:\\Portfolio\\test-project_2\\src\\stores\\RootStore.js":"10","C:\\Portfolio\\test-project_2\\src\\pages\\AddBook.js":"11","C:\\Portfolio\\test-project_2\\src\\pages\\Home.js":"12","C:\\Portfolio\\test-project_2\\src\\pages\\EditBook.js":"13","C:\\Portfolio\\test-project_2\\src\\stores\\NewBookViewStore.js":"14","C:\\Portfolio\\test-project_2\\src\\components\\NewBookView.js":"15","C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewBookForm.js":"16","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectFormInput.js":"17","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextFormInput.js":"18","C:\\Portfolio\\test-project_2\\src\\pages\\BookDetails.js":"19","C:\\Portfolio\\test-project_2\\src\\components\\BookDetailsView.js":"20","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\Card.js":"21","C:\\Portfolio\\test-project_2\\src\\stores\\BookDetailsViewStore.js":"22","C:\\Portfolio\\test-project_2\\src\\components\\services\\BookService.js":"23","C:\\Portfolio\\test-project_2\\src\\components\\AddBookDescriptionForm.js":"24","C:\\Portfolio\\test-project_2\\src\\components\\AddBookForm.js":"25","C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookDescriptionForm.js":"26","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextAreaFormInput.js":"27","C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookReviewForm.js":"28","C:\\Portfolio\\test-project_2\\src\\components\\AddBookReviewForm.js":"29","C:\\Portfolio\\test-project_2\\src\\components\\Table.js":"30","C:\\Portfolio\\test-project_2\\src\\components\\TableFilters.js":"31","C:\\Portfolio\\test-project_2\\src\\components\\Pagination.js":"32"},{"size":819,"mtime":1607662076483,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":743,"mtime":1608352746392,"results":"36","hashOfConfig":"34"},{"size":938,"mtime":1607282709365,"results":"37","hashOfConfig":"34"},{"size":551,"mtime":1608598001533,"results":"38","hashOfConfig":"34"},{"size":733,"mtime":1608539159620,"results":"39","hashOfConfig":"34"},{"size":5644,"mtime":1608592888885,"results":"40","hashOfConfig":"34"},{"size":453,"mtime":1607662076482,"results":"41","hashOfConfig":"34"},{"size":1505,"mtime":1607662076482,"results":"42","hashOfConfig":"34"},{"size":467,"mtime":1608527834090,"results":"43","hashOfConfig":"34"},{"size":451,"mtime":1608251391949,"results":"44","hashOfConfig":"34"},{"size":450,"mtime":1607662076484,"results":"45","hashOfConfig":"34"},{"size":511,"mtime":1607662076483,"results":"46","hashOfConfig":"34"},{"size":3850,"mtime":1608521470623,"results":"47","hashOfConfig":"34"},{"size":1211,"mtime":1608524287138,"results":"48","hashOfConfig":"34"},{"size":2694,"mtime":1608352559553,"results":"49","hashOfConfig":"34"},{"size":537,"mtime":1608318128420,"results":"50","hashOfConfig":"34"},{"size":409,"mtime":1608318128417,"results":"51","hashOfConfig":"34"},{"size":378,"mtime":1608523436531,"results":"52","hashOfConfig":"34"},{"size":3284,"mtime":1608598049590,"results":"53","hashOfConfig":"34"},{"size":3063,"mtime":1608595847547,"results":"54","hashOfConfig":"34"},{"size":591,"mtime":1608348646899,"results":"55","hashOfConfig":"34"},{"size":2381,"mtime":1608599668326,"results":"56","hashOfConfig":"34"},{"size":683,"mtime":1608524047720,"results":"57","hashOfConfig":"34"},{"size":1154,"mtime":1608524311017,"results":"58","hashOfConfig":"34"},{"size":1249,"mtime":1608518631985,"results":"59","hashOfConfig":"34"},{"size":384,"mtime":1608345130529,"results":"60","hashOfConfig":"34"},{"size":1076,"mtime":1608516543244,"results":"61","hashOfConfig":"34"},{"size":692,"mtime":1608524082998,"results":"62","hashOfConfig":"34"},{"size":2609,"mtime":1608595095964,"results":"63","hashOfConfig":"34"},{"size":916,"mtime":1608539505113,"results":"64","hashOfConfig":"34"},{"size":2136,"mtime":1608538582751,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"19jjmdu",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Portfolio\\test-project_2\\src\\index.js",[],["138","139"],"C:\\Portfolio\\test-project_2\\src\\reportWebVitals.js",[],"C:\\Portfolio\\test-project_2\\src\\App.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\animations\\Spinner.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\MainTitle.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\TableView.js",["140"],"import React, {useEffect} from 'react'\r\nimport {Observer} from 'mobx-react'\r\n// import Pagination from \"./Pagination\";\r\nimport Spinner from \"./animations/Spinner\";\r\nimport Table from \"./Table\";\r\nimport TableFilters from \"./TableFilters\";\r\n\r\nconst TableView = ({data}) => {\r\n    const store = data;\r\n\r\n    useEffect(() => {\r\n           store.getData();\r\n        }, []);\r\n\r\n         return(\r\n             <Observer>{()=>\r\n                 <div className=\"container\">\r\n                     <TableFilters store={store}/>\r\n                     {store.loading === true ? <Spinner/> : null}\r\n                     <Table store = {store}/>\r\n                 </div>\r\n             }\r\n             </Observer>\r\n )\r\n};\r\nexport default TableView\r\n","C:\\Portfolio\\test-project_2\\src\\stores\\TableViewStore.js",["141","142","143"],"import {action, autorun, computed, observable, runInAction, set} from \"mobx\";\r\nimport {BookService} from \"../components/services/BookService\";\r\n\r\n\r\nexport class TableViewStore {\r\n    @observable books =[];\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.api = new BookService();\r\n\r\n    }\r\n   @observable   statusArray =['All','Completed', 'To-Read'];\r\n    @observable  sortArray = ['Unsorted','Ascending','Descending'];\r\n    @observable  apiData = [];\r\n    @observable  status = 'All';\r\n    @observable  search = '';\r\n    @observable  sort = '';\r\n    @observable  filteredList = [];\r\n    @observable  sorted = 'Unsorted';\r\n    @observable  itemsPerPage = 5;\r\n    @observable  lastPage = '';\r\n    @observable  error = '';\r\n    @observable  page = 1;\r\n    @observable  limit = 30;\r\n    @observable  loading = true;\r\n\r\n\r\n  @action  getData = async () => {\r\n        this.loading = true;\r\n           try {\r\n               if (this.status==='All' && this.sorted === 'Unsorted'){\r\n                   const data = await this.api.get();\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   runInAction(() => {\r\n                       this.apiData = toArray;\r\n                   });\r\n               }  if (this.status === 'Completed' || this.status ==='To-Read') {\r\n                   const data = await this.api.find(`?&orderBy=\"status\"&equalTo=\"${this.status}\"`);\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   runInAction(() => {\r\n                       this.apiData = toArray;\r\n                   });\r\n               } else if(this.sorted !== 'Unsorted' && this.status==='All'){\r\n                   const data = await this.api.find(`?&orderBy=\"author\"`);\r\n                   const toArray = Object.keys(data).map(i => data[i]);\r\n                   const desc = toArray.slice().sort((a, b) => a.author.localeCompare(b.author));\r\n                   const asc =  toArray.slice().sort((a, b) => b.author.localeCompare(a.author));\r\n                   if (this.sorted === 'Ascending'){\r\n                       runInAction(() => {\r\n                           this.apiData = asc;\r\n                       });\r\n                   }else  this.apiData = desc\r\n               }\r\n            } catch (error) {\r\n                runInAction(() => {\r\n                    this.error = \"error\";\r\n                })\r\n            }finally {\r\n               runInAction(() => {\r\n                   this.paginate();\r\n                   this.loading = false\r\n               });\r\n           }\r\n        };\r\n\r\n\r\n   @action deleteBook = async (id) => {\r\n        try {\r\n            this.loading = true;\r\n            const getNode = await this.api.find(`?&orderBy=\"id\"&equalTo=\"${id}\"`);\r\n            const forUrl  =Object.keys(getNode)[0];\r\n            const response = await this.api.delete(forUrl);\r\n            if (response.status === 204) {\r\n                runInAction(() => {\r\n                    this.loading = false\r\n                })\r\n            }\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.error=\"error\";\r\n            })\r\n        }finally {\r\n            this.getData()\r\n        }\r\n    };\r\n\r\n  @action async filter (){\r\n       try{\r\n              await runInAction(() => {\r\n                   this.sorted ='Unsorted';\r\n                   // this.filteredList = this.apiData.filter(el => el.status === this.status)\r\n                   console.log(this.filteredList)\r\n               })\r\n       }catch (e) {\r\n           this.error = 'error'\r\n       }\r\n\r\n    }\r\n\r\n  @action  handleFilterStatus = (e) => {\r\n        this.status = e.target.value;\r\n        this.filter()\r\n        this.getData()\r\n        // this.filter()\r\n    };\r\n  @action async doSort () {\r\n      this.loading = true;\r\n      try {\r\n          if (this.sorted === 'Unsorted') {\r\n              this.resetFilters();\r\n              runInAction(() => {\r\n                  this.loading = false\r\n              })\r\n          }\r\n          if (this.sorted === 'Ascending') {\r\n              runInAction(() => {\r\n                  // this.filteredList = this.apiData.slice().sort((a, b) => b.author.localeCompare(a.author))\r\n                  this.status = 'All'\r\n                  this.loading = false\r\n              })\r\n          }\r\n          if (this.sorted === 'Descending') {\r\n              runInAction(() => {\r\n                  // this.filteredList = this.apiData.slice().sort((a, b) => a.author.localeCompare(b.author))\r\n                  this.status = 'All';\r\n                  this.loading = false\r\n              })\r\n          }\r\n       }catch (e) {\r\n           this.error= 'error'\r\n       }\r\n   }\r\n  @action  handleSort= (e) =>{\r\n        this.sorted = e.target.value;\r\n        this.doSort()\r\n        this.getData();\r\n\r\n    };\r\n  @action  paginate(){\r\n         runInAction(() => {\r\n              const indexLastBook = this.page*this.itemsPerPage;\r\n              const indexFirstBook = indexLastBook - this.itemsPerPage;\r\n              this.filteredList = this.apiData.slice( indexFirstBook,indexLastBook);\r\n          })\r\n      }\r\n\r\n\r\n   @action handlePagination = value =>{\r\n           this.page = value;\r\n           this.getData()\r\n\r\n    };\r\n   @action resetFilters = () =>{\r\n        this.getData();\r\n        this.status = 'All';\r\n        this.sorted = 'Unsorted'\r\n    };\r\n   // @computed\r\n   // get paginated(){\r\n   //         const indexLastBook = this.page*this.itemsPerPage;\r\n   //         const indexFirstBook = indexLastBook - this.itemsPerPage;\r\n   //         return  this.apiData.slice( indexFirstBook,indexLastBook);\r\n   //     }\r\n   }\r\n\r\n\r\n\r\n","C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SearchInput.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectInput.js",[],"C:\\Portfolio\\test-project_2\\src\\stores\\RootStore.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\AddBook.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\Home.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\EditBook.js",[],"C:\\Portfolio\\test-project_2\\src\\stores\\NewBookViewStore.js",["144"],"import {action, observable, runInAction} from \"mobx\";\r\nimport {BookService} from \"../components/services/BookService\";\r\nimport uuid from 'react-uuid'\r\n\r\n\r\nexport class NewBookViewStore {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.api = new BookService();\r\n    }\r\n\r\n    @observable model = {\r\n        id: '',\r\n        author: '',\r\n        title: '',\r\n        status: '',\r\n        cover:'',\r\n        pages: '',\r\n        review : '',\r\n        description : '',\r\n        url:''\r\n    };\r\n    @observable currentBook = null;\r\n    @observable status = '';\r\n    @observable selectStatusArray = ['Completed', 'To-Read'];\r\n    @observable isLoading = true;\r\n    @observable description = '';\r\n    @observable review = '';\r\n\r\n    @action handleBookSubmit = async (form) => {\r\n        this.isLoading = true;\r\n        try {\r\n           runInAction(() => {\r\n                this.model = form.values()\r\n            });\r\n          await runInAction(() => {\r\n                this.model.id = uuid()\r\n            });\r\n            await this.api.post(this.model);\r\n                runInAction(() => {\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                    alert('Successfully added a book!')\r\n                })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            });\r\n        }\r\n    };\r\n    @action getBook = async (id) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const getNode = await this.api.find(`?&orderBy=\"id\"&equalTo=\"${id}\"`);\r\n            const uid = Object.keys(getNode);\r\n            const toArray = Object.values(getNode);\r\n            runInAction(() => {\r\n                    this.model.author = toArray[0].author;\r\n                    this.model.status = toArray[0].status;\r\n                    this.model.title = toArray[0].title;\r\n                    this.model.id = toArray[0].id;\r\n                    this.model.cover = toArray[0].cover;\r\n                    this.model.pages = toArray[0].pages;\r\n                    this.model.description = toArray[0].description;\r\n                    this.model.review = toArray[0].review;\r\n                    this.model.url = toArray[0].url;\r\n                    this.currentBook = uid[0];\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            })\r\n        }\r\n    };\r\n    @action  resetData = async () =>{\r\n        try {\r\n            this.isLoading = true;\r\n            await runInAction(() => {\r\n                    this.model.author = '';\r\n                    this.model.status = '';\r\n                    this.model.title = '';\r\n                    this.model.id = '';\r\n                    this.model.cover ='';\r\n                    this.model.pages = '';\r\n                    this.model.url = '';\r\n                    this.model.description = '';\r\n                    this.model.review = '';\r\n                })\r\n        }catch (e) {\r\n        }\r\n    }\r\n    @action editBook = async (form) => {\r\n        const node = form.values().node;\r\n        const id = form.values().id;\r\n        try {\r\n           runInAction(() => {\r\n                this.model = form.values();\r\n            });\r\n            const response = await this.api.patch(this.model,node);\r\n            if (response.status === 200) {\r\n                runInAction(() => {\r\n                    this.status = \"success\";\r\n                    this.isLoading = false;\r\n                    alert('Success')\r\n                })\r\n            }\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.status = \"error\";\r\n            })\r\n        }finally {\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","C:\\Portfolio\\test-project_2\\src\\components\\NewBookView.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\NewBookForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\SelectFormInput.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextFormInput.js",[],"C:\\Portfolio\\test-project_2\\src\\pages\\BookDetails.js",["145"],"import React from \"react\";\r\nimport {MainTitle} from \"../components/MainTitle\";\r\nimport {useParams} from 'react-router-dom'\r\nimport BookDetailsView from \"../components/BookDetailsView\";\r\n\r\n\r\nfunction  BookDetails(){\r\n    let { id } = useParams();\r\n    return (\r\n        <div>\r\n            <BookDetailsView id = {id}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default BookDetails;\r\n","C:\\Portfolio\\test-project_2\\src\\components\\BookDetailsView.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\Card.js",[],"C:\\Portfolio\\test-project_2\\src\\stores\\BookDetailsViewStore.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\services\\BookService.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\AddBookDescriptionForm.js",["146"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport TextAreaFormInput from \"./inputs/TextAreaFormInput\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default observer(({ form,id }) => (\r\n    <form onSubmit={form.onSubmit}>\r\n        <TextAreaFormInput field={form.$('description')}/>\r\n        <div className=\"row-buttons\">\r\n            {id=== undefined ?<button className=\"green-button\"  onClick={form.onSubmit}>Submit</button>:<button type=\"submit\"onClick={form.onSubmit}>Edit</button>}\r\n            <button type=\"button\"   className=\"green-button\" onClick={form.onClear}>Clear</button>\r\n        </div>\r\n        <p>{form.error}</p>\r\n    </form>\r\n));\r\n","C:\\Portfolio\\test-project_2\\src\\components\\AddBookForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookDescriptionForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\inputs\\TextAreaFormInput.js",[],["147","148"],"C:\\Portfolio\\test-project_2\\src\\components\\forms\\BookReviewForm.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\AddBookReviewForm.js",["149"],"import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport TextAreaFormInput from \"./inputs/TextAreaFormInput\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default observer(({ form, id}) => (\r\n    <form onSubmit={form.onSubmit}>\r\n        <TextAreaFormInput field={form.$('review')}/>\r\n        <div className=\"row-buttons\">\r\n            {id=== undefined ?<button type=\"submit\"  className=\"green-button\" onClick={form.onSubmit}>Submit</button>:<button type=\"submit\" onClick={form.onSubmit}>Edit</button>}\r\n            <button type=\"button\" className=\"green-button\"  onClick={form.onClear}>Clear</button>\r\n        </div>\r\n        <p>{form.error}</p>\r\n    </form>\r\n));\r\n","C:\\Portfolio\\test-project_2\\src\\components\\Table.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\TableFilters.js",[],"C:\\Portfolio\\test-project_2\\src\\components\\Pagination.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":13,"column":12,"nodeType":"156","endLine":13,"endColumn":14,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"158","severity":1,"message":"162","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":34},{"ruleId":"158","severity":1,"message":"163","line":1,"column":61,"nodeType":"160","messageId":"161","endLine":1,"endColumn":64},{"ruleId":"158","severity":1,"message":"164","line":96,"column":15,"nodeType":"160","messageId":"161","endLine":96,"endColumn":17},{"ruleId":"158","severity":1,"message":"165","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},{"ruleId":"158","severity":1,"message":"166","line":4,"column":9,"nodeType":"160","messageId":"161","endLine":4,"endColumn":13},{"ruleId":"150","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"158","severity":1,"message":"166","line":4,"column":9,"nodeType":"160","messageId":"161","endLine":4,"endColumn":13},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-unused-vars","'autorun' is defined but never used.","Identifier","unusedVar","'computed' is defined but never used.","'set' is defined but never used.","'id' is assigned a value but never used.","'MainTitle' is defined but never used.","'Link' is defined but never used.",["169"],["170"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Update the dependencies array to be: [store]",{"range":"174","text":"175"},[364,366],"[store]"]